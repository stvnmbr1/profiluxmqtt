stages:
  - style
  - build

docker-lint:
  stage: style
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint Dockerfile | tee -a  server_docker_lint.txt
  artifacts:
    paths:
      - server_docker_lint.txt
    expire_in: 1 week

.publish_docker:
  needs: [ ]
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --no-cache --pull -t $TAG .
    - docker push $TAG


publish-docker:
  extends: .publish_docker
  variables:
    TAG: $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == "master"


publish-docker-tag:
  extends: .publish_docker
  variables:
    TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  rules:
    - if: $CI_COMMIT_TAG

build-docker:
  extends: .publish_docker
  script:
    - docker build --no-cache --pull .
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH != "master"
